% GridSearch_main - 交叉率和变异率的网格搜索主程序
% 
% 该脚本通过网格搜索的方法，对遗传算法（GA）的两个关键参数——交叉率（pc）和变异率（pm）进行调优。
% 在给定的交叉率和变异率组合下，遗传算法运行多次，记录每组参数下的平均优化结果，以找到最优参数组合。
%
% 主要步骤：
% 1. 定义优化问题，包括目标函数和约束条件。
% 2. 设置遗传算法的种群大小和最大迭代次数。
% 3. 对交叉率（pc）和变异率（pm）进行多次网格搜索，记录每组参数下的平均优化结果。
% 
% 语法：
%   运行该脚本以执行遗传算法的网格搜索。
% 
% 目标函数：
%   f(x) = 21.5 + x(1) * sin(4 * pi * x(1)) + x(2) * sin(20 * pi * x(2))
%   优化目标为最大化。
% 
% 约束条件：
%   lb - 自变量的下界为 [-3.0, 4.1]。
%   ub - 自变量的上界为 [12.4, 5.8]。
% 
% 遗传算法参数：
%   N      - 种群大小为 100。
%   Gmax   - 最大迭代次数为 2000。
% 
% 网格搜索范围：
%   pc     - 交叉率，取值范围为 0.1 到 0.9，步长为 0.1。
%   pm     - 变异率，取值范围为 0.01 到 0.09，步长为 0.01。
%   Times  - 每组交叉率和变异率组合的运行次数为 30。
% 
% 输出结果：
%   tab - 一个 81 行 3 列的 cell 数组，其中：
%         tab{k,1} - 交叉率（pc）的值。
%         tab{k,2} - 变异率（pm）的值。
%         tab{k,3} - 在该参数组合下运行 30 次的平均优化结果。
% 
% 说明：
%   该脚本通过多次运行遗传算法，寻找最优的交叉率和变异率组合，以提升算法的优化效果。
%   最终结果存储在 tab 中，每一行对应一个参数组合及其平均效果。
% 
% 示例：
%   直接运行脚本，执行网格搜索并获取最优的交叉率和变异率。


% 清理工作区
clc
clear
close all
 
% 目标函数
f = @(x) 21.5+x(1).*sin(4*pi().*x(1))+x(2).*sin(20.*pi().*x(2));
target = "max";

% 约束条件
lb = [-3.0,4.1];    % 自变量下界
ub = [12.4,5.8];    % 自变量上界

% 遗传算法参数
N = 100;            % 种群大小
Gmax = 2000;        % 最大迭代次数

% 每组参数运行次数
Times = 30; 
 
tab = cell(81,3);
res = zeros(30,1);
 
k = 1;
for pc = 0.1:0.1:0.9        % 交叉率
    for pm = 0.01:0.01:0.09 % 变异率
        for t=1:Times
            res(t,1) = myGA(N, pc, pm, Gmax,f, lb, ub, target);
        end
        tab{k,1} = pc;
        tab{k,2} = pm;
        tab{k,3}=mean(res(:,1));
        k=k+1;
    end
end